{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "5a8e75cd",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "dd49f093",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "12"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(set([\"Physics\",\n",
    "\"Computer Science\",\n",
    "\"Biology\",\n",
    "\"Math\",\n",
    "\"Nursing\",\n",
    "\"Natural Sciences\",\n",
    "\"Computer Science\",\n",
    "\"Math\",\n",
    "\"Math\",\n",
    "\"Neuroscience\",\n",
    "\"Biochemistry\",\n",
    "\"Chemistry\",\n",
    "\"Biology\",\n",
    "\"Environmental Science\",\n",
    "\"Neuroscience\",\n",
    "\"Computer Science\",\n",
    "\"Biochemistry\",\n",
    "\"Math\",\n",
    "\"Environmental Studies\",\n",
    "\"Health Science\"]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "e60d3b73",
   "metadata": {},
   "outputs": [
    {
     "ename": "FileNotFoundError",
     "evalue": "[Errno 2] No such file or directory: 'majors.csv'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "Input \u001b[0;32mIn [2]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0m df \u001b[38;5;241m=\u001b[39m \u001b[43mpd\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mread_csv\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mmajors.csv\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\n\u001b[1;32m      2\u001b[0m programs \u001b[38;5;241m=\u001b[39m pd\u001b[38;5;241m.\u001b[39mread_csv(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmajor-programs.csv\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m      4\u001b[0m df \u001b[38;5;241m=\u001b[39m df[[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mStudent Id\u001b[39m\u001b[38;5;124m'\u001b[39m,\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mSchool Desc\u001b[39m\u001b[38;5;124m'\u001b[39m,  \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mFirst\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mLast\u001b[39m\u001b[38;5;124m'\u001b[39m,\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mMajor 1\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mMajor 1 Desc\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mMajor 2\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mMajor 2 Desc\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mCourse \u001b[39m\u001b[38;5;124m'\u001b[39m]]\n",
      "File \u001b[0;32m~/.virtualenvs/school-data/lib/python3.10/site-packages/pandas/util/_decorators.py:311\u001b[0m, in \u001b[0;36mdeprecate_nonkeyword_arguments.<locals>.decorate.<locals>.wrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    305\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mlen\u001b[39m(args) \u001b[38;5;241m>\u001b[39m num_allow_args:\n\u001b[1;32m    306\u001b[0m     warnings\u001b[38;5;241m.\u001b[39mwarn(\n\u001b[1;32m    307\u001b[0m         msg\u001b[38;5;241m.\u001b[39mformat(arguments\u001b[38;5;241m=\u001b[39marguments),\n\u001b[1;32m    308\u001b[0m         \u001b[38;5;167;01mFutureWarning\u001b[39;00m,\n\u001b[1;32m    309\u001b[0m         stacklevel\u001b[38;5;241m=\u001b[39mstacklevel,\n\u001b[1;32m    310\u001b[0m     )\n\u001b[0;32m--> 311\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[0;32m~/.virtualenvs/school-data/lib/python3.10/site-packages/pandas/io/parsers/readers.py:680\u001b[0m, in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, error_bad_lines, warn_bad_lines, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options)\u001b[0m\n\u001b[1;32m    665\u001b[0m kwds_defaults \u001b[38;5;241m=\u001b[39m _refine_defaults_read(\n\u001b[1;32m    666\u001b[0m     dialect,\n\u001b[1;32m    667\u001b[0m     delimiter,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    676\u001b[0m     defaults\u001b[38;5;241m=\u001b[39m{\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mdelimiter\u001b[39m\u001b[38;5;124m\"\u001b[39m: \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m,\u001b[39m\u001b[38;5;124m\"\u001b[39m},\n\u001b[1;32m    677\u001b[0m )\n\u001b[1;32m    678\u001b[0m kwds\u001b[38;5;241m.\u001b[39mupdate(kwds_defaults)\n\u001b[0;32m--> 680\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43m_read\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfilepath_or_buffer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mkwds\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[0;32m~/.virtualenvs/school-data/lib/python3.10/site-packages/pandas/io/parsers/readers.py:575\u001b[0m, in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    572\u001b[0m _validate_names(kwds\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mnames\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m))\n\u001b[1;32m    574\u001b[0m \u001b[38;5;66;03m# Create the parser.\u001b[39;00m\n\u001b[0;32m--> 575\u001b[0m parser \u001b[38;5;241m=\u001b[39m \u001b[43mTextFileReader\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfilepath_or_buffer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwds\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    577\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m chunksize \u001b[38;5;129;01mor\u001b[39;00m iterator:\n\u001b[1;32m    578\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m parser\n",
      "File \u001b[0;32m~/.virtualenvs/school-data/lib/python3.10/site-packages/pandas/io/parsers/readers.py:933\u001b[0m, in \u001b[0;36mTextFileReader.__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m    930\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m=\u001b[39m kwds[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m]\n\u001b[1;32m    932\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles: IOHandles \u001b[38;5;241m|\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[0;32m--> 933\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_make_engine\u001b[49m\u001b[43m(\u001b[49m\u001b[43mf\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mengine\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[0;32m~/.virtualenvs/school-data/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1217\u001b[0m, in \u001b[0;36mTextFileReader._make_engine\u001b[0;34m(self, f, engine)\u001b[0m\n\u001b[1;32m   1213\u001b[0m     mode \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mrb\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m   1214\u001b[0m \u001b[38;5;66;03m# error: No overload variant of \"get_handle\" matches argument types\u001b[39;00m\n\u001b[1;32m   1215\u001b[0m \u001b[38;5;66;03m# \"Union[str, PathLike[str], ReadCsvBuffer[bytes], ReadCsvBuffer[str]]\"\u001b[39;00m\n\u001b[1;32m   1216\u001b[0m \u001b[38;5;66;03m# , \"str\", \"bool\", \"Any\", \"Any\", \"Any\", \"Any\", \"Any\"\u001b[39;00m\n\u001b[0;32m-> 1217\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;241m=\u001b[39m \u001b[43mget_handle\u001b[49m\u001b[43m(\u001b[49m\u001b[43m  \u001b[49m\u001b[38;5;66;43;03m# type: ignore[call-overload]\u001b[39;49;00m\n\u001b[1;32m   1218\u001b[0m \u001b[43m    \u001b[49m\u001b[43mf\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1219\u001b[0m \u001b[43m    \u001b[49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1220\u001b[0m \u001b[43m    \u001b[49m\u001b[43mencoding\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mencoding\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1221\u001b[0m \u001b[43m    \u001b[49m\u001b[43mcompression\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mcompression\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1222\u001b[0m \u001b[43m    \u001b[49m\u001b[43mmemory_map\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mmemory_map\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mFalse\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1223\u001b[0m \u001b[43m    \u001b[49m\u001b[43mis_text\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mis_text\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1224\u001b[0m \u001b[43m    \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mencoding_errors\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mstrict\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1225\u001b[0m \u001b[43m    \u001b[49m\u001b[43mstorage_options\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mstorage_options\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1226\u001b[0m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1227\u001b[0m \u001b[38;5;28;01massert\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m   1228\u001b[0m f \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles\u001b[38;5;241m.\u001b[39mhandle\n",
      "File \u001b[0;32m~/.virtualenvs/school-data/lib/python3.10/site-packages/pandas/io/common.py:789\u001b[0m, in \u001b[0;36mget_handle\u001b[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[1;32m    784\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(handle, \u001b[38;5;28mstr\u001b[39m):\n\u001b[1;32m    785\u001b[0m     \u001b[38;5;66;03m# Check whether the filename is to be opened in binary mode.\u001b[39;00m\n\u001b[1;32m    786\u001b[0m     \u001b[38;5;66;03m# Binary mode does not support 'encoding' and 'newline'.\u001b[39;00m\n\u001b[1;32m    787\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mencoding \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mmode:\n\u001b[1;32m    788\u001b[0m         \u001b[38;5;66;03m# Encoding\u001b[39;00m\n\u001b[0;32m--> 789\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mopen\u001b[39;49m\u001b[43m(\u001b[49m\n\u001b[1;32m    790\u001b[0m \u001b[43m            \u001b[49m\u001b[43mhandle\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    791\u001b[0m \u001b[43m            \u001b[49m\u001b[43mioargs\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    792\u001b[0m \u001b[43m            \u001b[49m\u001b[43mencoding\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mioargs\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mencoding\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    793\u001b[0m \u001b[43m            \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    794\u001b[0m \u001b[43m            \u001b[49m\u001b[43mnewline\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[1;32m    795\u001b[0m \u001b[43m        \u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    796\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m    797\u001b[0m         \u001b[38;5;66;03m# Binary mode\u001b[39;00m\n\u001b[1;32m    798\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(handle, ioargs\u001b[38;5;241m.\u001b[39mmode)\n",
      "\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'majors.csv'"
     ]
    }
   ],
   "source": [
    "df = pd.read_csv(\"majors.csv\")\n",
    "programs = pd.read_csv(\"major-programs.csv\")\n",
    "\n",
    "df = df[['Student Id','School Desc',  'First', 'Last','Major 1', 'Major 1 Desc', 'Major 2', 'Major 2 Desc', 'Course ']]\n",
    "cols = {'Student Id':\"id\", \"School Desc\":\"unit\",\"Major 1\":\"major_code\", \"Major 1 Desc\":\"major\",\"Major 2\":\"major2_code\", \"Major 2 Desc\":\"major2\", \"First\":\"first\", \"Last\":\"last\"}\n",
    "df = df.rename(columns=cols)\n",
    "# df = df[cols.values()]\n",
    "df = df[df.id.notnull()]\n",
    "# df = df[df.unit == 'Ruth S. Ammon College of Education and Health Sciences']\n",
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "63abc2ab",
   "metadata": {},
   "outputs": [],
   "source": [
    "majors = df[[\"major_code\", \"major\", \"id\"]].groupby([\"major_code\",\"major\"]).count().reset_index()\n",
    "majors.columns = [\"major_code\", \"major\", \"enrollment\"]\n",
    "\n",
    "\n",
    "\n",
    "not_soe = [\"EPH\", \"ECM\",\"PSM\",\"PYE\",\"SCD\",\"PHR\",\"DND\",\"PHS\",\"SAU\",\"NUT\",\"EHC\",\"EHG\",\"EHE\"\n",
    "          \"EHS\",\"HCH\",\"PHP\",\"PHV\",\"SLS\", \"EZA\", \"PHN\"]\n",
    "\n",
    "soe = ['EAB', 'EAD', 'EAF', 'EAH', 'EAJ', 'EAM', 'EAT', 'EAV', 'EBA', 'EBB', 'EBI', \n",
    "       'ECH', 'ECK', 'ECU', 'EDL', 'EDX', 'EEC', 'EHS', 'EIS', 'ELA', 'ELB', \n",
    "       'ELD', 'ELY', 'EMD', 'ESH', 'ESJ', 'ETE', 'ETH', 'ETN', 'EZT', 'PES']\n",
    "\n",
    "\n",
    "step = df[df.major2_code.isin(soe)].copy()\n",
    "step.major = step.major2\n",
    "step.major_code = step.major2_code\n",
    "\n",
    "soe_students = df[df.major_code.isin(soe)]\n",
    "\n",
    "# majors.to_csv(\"majors-counts.csv\")\n",
    "# step.sort_values(\"enrollment\", ascending=False)\n",
    "\n",
    "\n",
    "# df[[\"major_code\",\"major\",\"major2_code\", \"major2\"]][df.major_code == \"EDN\"].drop_duplicates()\n",
    "\n",
    "soe_students = soe_students[[\"major_code\", \"major\", \"id\"]]\n",
    "step = step[[\"major_code\", \"major\", \"id\"]]\n",
    "majors = pd.concat([soe_students, step])\n",
    "majors = majors.rename(columns={\"major_code\":\"code\"})\n",
    "majors = majors.merge(programs, how=\"left\", on=\"code\")\n",
    "\n",
    "\n",
    "enrollment = majors.groupby([\"code\", \"major\", \"program\"]).count().reset_index()\n",
    "enrollment = enrollment.rename(columns={\"id\":\"enrollment\"})\n",
    "\n",
    "enrollment.sort_values(\"major\", ascending=False)\n",
    "\n",
    "program_count = enrollment.groupby(\"program\").agg({\"enrollment\":\"sum\"}).reset_index()\n",
    "program_count.columns = [\"program\", \"program total\"]\n",
    "# enrollment.merge(program_count, how=\"left\", on=\"program\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "a743a744",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>major</th>\n",
       "      <th>id</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>major_code</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>EAH</th>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>EBA</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>EHS</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>EMD</th>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ETE</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            major  id\n",
       "major_code           \n",
       "EAH            13  13\n",
       "EBA             1   1\n",
       "EHS             1   1\n",
       "EMD            15  15\n",
       "ETE             3   3"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "\n",
    "program_count[\"major\"] = program_count.program\n",
    "program_count[\"code\"] = \"-\"\n",
    "program_count[\"enrollment\"] = \"0\"\n",
    "pd.concat([enrollment, program_count]).sort_values(by=[\"program\", \"program total\"])\n",
    "\n",
    "step.groupby(\"major_code\").count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "1bb24daa",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>program</th>\n",
       "      <th>enrollment</th>\n",
       "      <th>num_faculty</th>\n",
       "      <th>ratio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AUI/other</td>\n",
       "      <td>16</td>\n",
       "      <td>0.0</td>\n",
       "      <td>inf</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>art</td>\n",
       "      <td>54</td>\n",
       "      <td>2.0</td>\n",
       "      <td>27.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>ed leadership</td>\n",
       "      <td>13</td>\n",
       "      <td>1.0</td>\n",
       "      <td>13.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>ed tech</td>\n",
       "      <td>26</td>\n",
       "      <td>2.0</td>\n",
       "      <td>13.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>early childhood</td>\n",
       "      <td>12</td>\n",
       "      <td>1.0</td>\n",
       "      <td>12.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>adolescent</td>\n",
       "      <td>49</td>\n",
       "      <td>6.0</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>sped</td>\n",
       "      <td>38</td>\n",
       "      <td>5.0</td>\n",
       "      <td>7.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>tesol</td>\n",
       "      <td>37</td>\n",
       "      <td>5.0</td>\n",
       "      <td>7.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>childhood</td>\n",
       "      <td>16</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>literacy</td>\n",
       "      <td>7</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3.5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           program  enrollment  num_faculty  ratio\n",
       "0        AUI/other          16          0.0    inf\n",
       "2              art          54          2.0   27.0\n",
       "5    ed leadership          13          1.0   13.0\n",
       "6          ed tech          26          2.0   13.0\n",
       "4  early childhood          12          1.0   12.0\n",
       "1       adolescent          49          6.0    8.2\n",
       "8             sped          38          5.0    7.6\n",
       "9            tesol          37          5.0    7.4\n",
       "3        childhood          16          4.0    4.0\n",
       "7         literacy           7          2.0    3.5"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv(\"soe-majors.csv\")\n",
    "df.sort_values(\"enrollment\", ascending=False)\n",
    "programs = df[[\"program\",\"enrollment\",\"num_faculty\"]].groupby(\"program\").agg(\"sum\").reset_index()\n",
    "programs[\"ratio\"] = programs.enrollment / programs.num_faculty\n",
    "programs.ratio = programs.ratio.apply(lambda x: round(x,1))\n",
    "programs.sort_values(\"ratio\", ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "1c9257d8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['AND', 'AEN', nan, 'HIS', 'PMA', 'EAH', 'EAD', 'EZA', 'EDL', 'EDN',\n",
       "       'ECC', 'ENG', 'COM', 'EAI', 'CHE', 'ART', 'UND', 'EDX', 'MTH',\n",
       "       'EIS', 'ETN', 'EDT', 'EAF', 'ETE', 'EAM', 'ESJ', 'VIS', 'ACG',\n",
       "       'SOC', 'SPA', 'SCD', 'BIO', 'EBI', 'PHY', 'ELY', 'PIA', 'BMG',\n",
       "       'EAA', 'NUR', 'SWL', 'EAB', 'ELB', 'EAJ', 'ECH', 'BFN', 'PSM',\n",
       "       'CIS', 'THE', 'INT', 'BAA', 'EAT', 'NRN', 'ELD', 'ECM', 'NHP',\n",
       "       'PNE', 'ABL', 'CSC', 'MUE', 'IND', 'EZT', 'ECK', 'ARS', 'CIN',\n",
       "       'ADN', 'ESX', 'ACM', 'POL', 'PHS', 'MDS', 'PYE'], dtype=object)"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv(\"edt.csv\")\n",
    "df[\"Major \"].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "5d265bba",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>email</th>\n",
       "      <th>first</th>\n",
       "      <th>last</th>\n",
       "      <th>major</th>\n",
       "      <th>year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>1456235</td>\n",
       "      <td>THOMASJENNINGS@mail.adelphi.edu</td>\n",
       "      <td>THOMAS</td>\n",
       "      <td>JENNINGS</td>\n",
       "      <td>EDN</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>1591792</td>\n",
       "      <td>DENNISPETTAS@mail.adelphi.edu</td>\n",
       "      <td>DENNIS</td>\n",
       "      <td>PETTAS</td>\n",
       "      <td>EDN</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>1572460</td>\n",
       "      <td>MARIEDETTLING@mail.adelphi.edu</td>\n",
       "      <td>MARIE</td>\n",
       "      <td>DETTLING</td>\n",
       "      <td>EDN</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>133</th>\n",
       "      <td>1643248</td>\n",
       "      <td>KRISTENHOHORST@mail.adelphi.edu</td>\n",
       "      <td>KRISTEN</td>\n",
       "      <td>HOHORST</td>\n",
       "      <td>EDN</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>173</th>\n",
       "      <td>1630218</td>\n",
       "      <td>MITCHELLKASE@mail.adelphi.edu</td>\n",
       "      <td>MITCHELL</td>\n",
       "      <td>KASE</td>\n",
       "      <td>EDX</td>\n",
       "      <td>2012</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5382</th>\n",
       "      <td>1896604</td>\n",
       "      <td>MICHAELPETERS@mail.adelphi.edu</td>\n",
       "      <td>MICHAEL</td>\n",
       "      <td>PETERS</td>\n",
       "      <td>EDX</td>\n",
       "      <td>2021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5386</th>\n",
       "      <td>1895466</td>\n",
       "      <td>YANRUCHEN@mail.adelphi.edu</td>\n",
       "      <td>YANRU</td>\n",
       "      <td>CHEN</td>\n",
       "      <td>EDX</td>\n",
       "      <td>2021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5398</th>\n",
       "      <td>1905958</td>\n",
       "      <td>NICOLESPINELLI2@mail.adelphi.edu</td>\n",
       "      <td>NICOLE</td>\n",
       "      <td>SPINELLI</td>\n",
       "      <td>EDX</td>\n",
       "      <td>2021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5402</th>\n",
       "      <td>1896021</td>\n",
       "      <td>JIEWENLIANG@mail.adelphi.edu</td>\n",
       "      <td>JIEWEN</td>\n",
       "      <td>LIANG</td>\n",
       "      <td>EDX</td>\n",
       "      <td>2021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5419</th>\n",
       "      <td>1894411</td>\n",
       "      <td>JULIESANTANA@mail.adelphi.edu</td>\n",
       "      <td>JULIE</td>\n",
       "      <td>SANTANA</td>\n",
       "      <td>EDX</td>\n",
       "      <td>2021</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>412 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           id                             email     first      last major  \\\n",
       "57    1456235   THOMASJENNINGS@mail.adelphi.edu    THOMAS  JENNINGS   EDN   \n",
       "97    1591792     DENNISPETTAS@mail.adelphi.edu    DENNIS    PETTAS   EDN   \n",
       "99    1572460    MARIEDETTLING@mail.adelphi.edu     MARIE  DETTLING   EDN   \n",
       "133   1643248   KRISTENHOHORST@mail.adelphi.edu   KRISTEN   HOHORST   EDN   \n",
       "173   1630218     MITCHELLKASE@mail.adelphi.edu  MITCHELL      KASE   EDX   \n",
       "...       ...                               ...       ...       ...   ...   \n",
       "5382  1896604    MICHAELPETERS@mail.adelphi.edu   MICHAEL    PETERS   EDX   \n",
       "5386  1895466        YANRUCHEN@mail.adelphi.edu     YANRU      CHEN   EDX   \n",
       "5398  1905958  NICOLESPINELLI2@mail.adelphi.edu    NICOLE  SPINELLI   EDX   \n",
       "5402  1896021      JIEWENLIANG@mail.adelphi.edu    JIEWEN     LIANG   EDX   \n",
       "5419  1894411     JULIESANTANA@mail.adelphi.edu     JULIE   SANTANA   EDX   \n",
       "\n",
       "      year  \n",
       "57    2011  \n",
       "97    2011  \n",
       "99    2011  \n",
       "133   2011  \n",
       "173   2012  \n",
       "...    ...  \n",
       "5382  2021  \n",
       "5386  2021  \n",
       "5398  2021  \n",
       "5402  2021  \n",
       "5419  2021  \n",
       "\n",
       "[412 rows x 6 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = df[[\"Student Id\", \"Gw Email Address \", \"First\", \"Last\",\"Major \", 'Academic Year ']].copy()\n",
    "df.columns = [\"id\", \"email\",\"first\",\"last\",\"major\", \"year\"]\n",
    "df = df[df.major.isin([\"EDN\", \"EDX\", \"EDT\"])]\n",
    "df.email = df.email.apply(lambda x: str(x).strip() if x else \"\")\n",
    "df.year = df.year.apply(lambda x: int(x.split(\"-\")[0]))\n",
    "df\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "123fae23",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>email</th>\n",
       "      <th>first</th>\n",
       "      <th>last</th>\n",
       "      <th>major</th>\n",
       "      <th>year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>64</th>\n",
       "      <td>1704278</td>\n",
       "      <td>ASHLEYJONES@mail.adelphi.edu</td>\n",
       "      <td>ASHLEY</td>\n",
       "      <td>JONES</td>\n",
       "      <td>EDX</td>\n",
       "      <td>2021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>112</th>\n",
       "      <td>1868100</td>\n",
       "      <td>GAYNELMASTERS@mail.adelphi.edu</td>\n",
       "      <td>GAYNEL</td>\n",
       "      <td>DIXON MASTERS</td>\n",
       "      <td>EDX</td>\n",
       "      <td>2021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63</th>\n",
       "      <td>1701799</td>\n",
       "      <td>BROOKEGARDNER2@mail.adelphi.edu</td>\n",
       "      <td>BROOKE</td>\n",
       "      <td>GARDNER</td>\n",
       "      <td>EDX</td>\n",
       "      <td>2021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>987176</td>\n",
       "      <td>JENNIFERSOUTHARD@mail.adelphi.edu</td>\n",
       "      <td>JENNIFER</td>\n",
       "      <td>SOUTHARD</td>\n",
       "      <td>EDX</td>\n",
       "      <td>2021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>1705663</td>\n",
       "      <td>NICHOLASBROWN2@mail.adelphi.edu</td>\n",
       "      <td>NICHOLAS</td>\n",
       "      <td>BROWN</td>\n",
       "      <td>EDX</td>\n",
       "      <td>2021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>1646656</td>\n",
       "      <td>JARRETTCARTER@mail.adelphi.edu</td>\n",
       "      <td>JARRETT</td>\n",
       "      <td>CARTER</td>\n",
       "      <td>EDX</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>1630218</td>\n",
       "      <td>MITCHELLKASE@mail.adelphi.edu</td>\n",
       "      <td>MITCHELL</td>\n",
       "      <td>KASE</td>\n",
       "      <td>EDX</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1457387</td>\n",
       "      <td>CHRISTOPHERCHURCH@mail.adelphi.edu</td>\n",
       "      <td>CHRISTOPHER</td>\n",
       "      <td>CHURCH</td>\n",
       "      <td>EDX</td>\n",
       "      <td>2012</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>1572460</td>\n",
       "      <td>MARIEDETTLING@mail.adelphi.edu</td>\n",
       "      <td>MARIE</td>\n",
       "      <td>DETTLING</td>\n",
       "      <td>EDN</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>1591792</td>\n",
       "      <td>DENNISPETTAS@mail.adelphi.edu</td>\n",
       "      <td>DENNIS</td>\n",
       "      <td>PETTAS</td>\n",
       "      <td>EDN</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>129 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          id                               email        first           last  \\\n",
       "64   1704278        ASHLEYJONES@mail.adelphi.edu       ASHLEY          JONES   \n",
       "112  1868100      GAYNELMASTERS@mail.adelphi.edu       GAYNEL  DIXON MASTERS   \n",
       "63   1701799     BROOKEGARDNER2@mail.adelphi.edu       BROOKE        GARDNER   \n",
       "1     987176   JENNIFERSOUTHARD@mail.adelphi.edu     JENNIFER       SOUTHARD   \n",
       "65   1705663     NICHOLASBROWN2@mail.adelphi.edu     NICHOLAS          BROWN   \n",
       "..       ...                                 ...          ...            ...   \n",
       "42   1646656      JARRETTCARTER@mail.adelphi.edu      JARRETT         CARTER   \n",
       "38   1630218       MITCHELLKASE@mail.adelphi.edu     MITCHELL           KASE   \n",
       "8    1457387  CHRISTOPHERCHURCH@mail.adelphi.edu  CHRISTOPHER         CHURCH   \n",
       "25   1572460      MARIEDETTLING@mail.adelphi.edu        MARIE       DETTLING   \n",
       "29   1591792       DENNISPETTAS@mail.adelphi.edu       DENNIS         PETTAS   \n",
       "\n",
       "    major  year  \n",
       "64    EDX  2021  \n",
       "112   EDX  2021  \n",
       "63    EDX  2021  \n",
       "1     EDX  2021  \n",
       "65    EDX  2021  \n",
       "..    ...   ...  \n",
       "42    EDX  2013  \n",
       "38    EDX  2013  \n",
       "8     EDX  2012  \n",
       "25    EDN  2011  \n",
       "29    EDN  2011  \n",
       "\n",
       "[129 rows x 6 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "students = df.copy()\n",
    "students = students.groupby(\"id\", as_index=False).agg(\"max\")\n",
    "students.reset_index()\n",
    "\n",
    "def max_major(row):\n",
    "    sid = row[\"id\"]\n",
    "    ay = row[\"year\"]\n",
    "    major = df.query(f\"id == {sid} and year == {ay}\")[\"major\"].unique()[0]\n",
    "    return major\n",
    "\n",
    "students[\"major\"] = students.apply(max_major, axis=1)\n",
    "\n",
    "students = students.sort_values(by=[\"year\"], ascending=False)\n",
    "\n",
    "students.columns\n",
    "# students.to_csv(\"ed-tech-students.csv\")\n",
    "students"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "school-data",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.6 (main, Nov 10 2011, 15:00:00) [GCC 12.1.0]"
  },
  "vscode": {
   "interpreter": {
    "hash": "c853444e20c489e5b96d8e1a4533affead1d94f1ba40ff9ef08cffb9c8ee794e"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
